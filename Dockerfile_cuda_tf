FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04

MAINTAINER Sakakibara Akiyuki <moritarizumu@gmail.com>

ENV DEBIAN_FRONTEND noninteractive
ENV CUDNN_VERSION 6.0.21
ARG OPENCV_VERSION="3.3.0"
ARG UBUNTU_VERSION="16.04"

RUN echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list

LABEL com.nvidia.cudnn.version="${CUDNN_VERSION}"

RUN apt-get update && apt-get -y upgrade \
&&  apt-get install -y --no-install-recommends \
            libcudnn6=$CUDNN_VERSION-1+cuda8.0 \
            libcudnn6-dev=$CUDNN_VERSION-1+cuda8.0
# &&  rm -rf /var/lib/apt/lists/*
### package needed
RUN apt-get install -y git apt-file pkg-config wget unzip \
&&  apt-file update \
&&  apt-file search add-apt-repository \
&&  apt-get install -y software-properties-common \
                       python-software-properties \
                       apt-transport-https \
&&  add-apt-repository ppa:fkrull/deadsnakes \
### python install
&&  apt-get install -y python3.5-dev python-pip python3-pip \
                       python-numpy python3-numpy \
                       python-scipy python3-scipy \
                       python-matplotlib python3-matplotlib \
&&  pip install --upgrade pip \
&&  pip3 install --upgrade pip

## tensorflow and jupyter notebook lab
RUN pip3 install tensorflow-gpu \
&&  pip3 install jupyter \
&&  pip install jupyterlab \
&&  jupyter serverextension enable --py jupyterlab --sys-prefix \
&&  python3 -m IPython kernelspec install-self
ADD jupyter_notebook_config.py /root/.jupyter/

## install powershell
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
&&  curl https://packages.microsoft.com/config/ubuntu/${UBUNTU_VERSION}/prod.list | tee /etc/apt/sources.list.d/microsoft.list \
&&  apt-get update \
&&  apt-get install -y powershell \
&&  powershell

## install fish shell and arounds
### install powerline fonts
RUN apt-get -y install language-pack-ja-base language-pack-ja ibus-mozc \
&&  git clone https://github.com/powerline/fonts.git --depth=1 \
&&  cd fonts  \
&&  ./install.sh  \
&&  cd .. \
&&  rm -rf fonts \
&&  fc-cache -vf ~/.local/share/fonts/
ENV LC_ALL='ja_JP.UTF-8'

### install fish
WORKDIR /root
ADD config.fish /root/.config/fish/
ADD fish_config.sh /root/
RUN add-apt-repository ppa:fish-shell/release-2 \
&&  apt-get update \
&&  apt-get install -y fish \
#### install fisherman
&& curl -Lo ~/.config/fish/functions/fisher.fish --create-dirs git.io/fisher \
&&  chmod +x fish_config.sh \
&&  ./fish_config.sh \
&&  rm fish_config.sh \
#### install peco
&&  wget https://github.com/peco/peco/releases/download/v0.5.1/peco_linux_amd64.tar.gz \
&&  tar -zxvf peco_linux_amd64.tar.gz \
&&  mv peco_linux_amd64/peco /usr/local/bin/ \
&&  rm -r peco_linux_amd64/ \
&&  rm peco_linux_amd64.tar.gz \

# install editor
&&  apt-get install -y vim \
# install rsub for sublime text via ssh
&&  wget -O /usr/local/bin/rsub https://raw.github.com/aurora/rmate/master/rmate \
&&  chmod +x /usr/local/bin/rsub
WORKDIR /root

